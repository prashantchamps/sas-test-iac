name: Infrastructure
on:
  workflow_dispatch:
permissions:
  id-token: write
  contents: read
jobs:
  Create-PreRequisite:
    runs-on: ubuntu-latest
    steps:
      - name: 'Login on Azure'
        uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: 'Run Azure Pre-Requisites CLI commands'
        run: |
            az group create --name sas-test-tf --location eastus
            az storage account create -n sastesttfstate -g sas-test-tf -l eastus2 --sku Standard_LRS --location eastus
            az storage container create -n tfstate --account-name sastesttfstate --auth-mode login
  Create-Infrastructure:
    needs: Create-PreRequisite
    name: 'Terraform to create Infra'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VAR_appId: ${{ secrets.ARM_CLIENT_ID }}
      TF_VAR_password: ${{ secrets.ARM_CLIENT_SECRET }}
      TF_VAR_github_token: ${{ secrets.GIT_TOKEN }}
      TF_VERSION: 1.7.5
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
      - name: Terraform init
        id: init
        run: terraform init
      - name: Terraform validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform plan
        id: plan
        run: terraform plan -no-color
      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve
  Create-Secret:
    needs: Create-Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: 'Login on Azure'
        uses: azure/login@v1
        with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: 'Run Azure Pre-Requisites CLI commands'
        run: |
            az aks get-credentials --resource-group sas-test --name sas-test-aks --overwrite-existing true
            kubectl create secret docker-registry regcred --docker-server=sasaksacrtest.azurecr.io --docker-username=${{ secrets.ARM_CLIENT_ID }} --docker-password=${{ secrets.ARM_CLIENT_SECRET }} -n flux-system
